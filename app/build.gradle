apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {

        applicationId "com.pasc.debug.component.libbase"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorDimensions "smt"
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        product {
            buildConfigField "boolean", "PRODUCT_MODE", "true"
            buildConfigField "int", "PRODUCT_FLAVORS_TYPE", "1"
        }

        beta {
            buildConfigField "boolean", "PRODUCT_MODE", "false"
            buildConfigField "int", "PRODUCT_FLAVORS_TYPE", "2"
        }
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    dexOptions {
        jumboMode true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    // 规范输出的apk名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name.equals('release')) {
                outputFileName = "CitizenCard_${variant.versionName}_release.apk"
            } else if (variant.buildType.name.equals('debug')) {
                outputFileName = "CitizenCard_${variant.versionName}_debug.apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //google官方提供的兼容包
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:gridlayout-v7:$rootProject.ext.supportLibraryVersion" // gridlayout库
    implementation "com.android.support:percent:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraint_layout"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

//    if (isMavenBuild == 'true') {
//        api "com.pasc.lib:base:${rootProject.ext.libBaseVersion}"
//    } else {
        implementation project(":LibBase")
//    }
    implementation "com.trello.rxlifecycle2:rxlifecycle:${rootProject.ext.rxlifecycle2Version}"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:${rootProject.ext.rxlifecycle2Version}"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:${rootProject.ext.rxlifecycle2Version}"
}
